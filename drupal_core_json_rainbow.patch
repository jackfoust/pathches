diff --git a/composer.json b/composer.json
index c9656c5ddcd428719d19017b466e456778b9945d..277aaa5ca8681a09255682300f3b0ff7575aacf8 100644
--- a/composer.json
+++ b/composer.json
@@ -21,7 +21,7 @@
         "colinodell/psr-testlogger": "^1.2",
         "composer/composer": "^2.8.1",
         "drupal/coder": "^8.3.10",
-        "justinrainbow/json-schema": "^5.2",
+        "justinrainbow/json-schema": "^5.2 || ^6.3",
         "lullabot/mink-selenium2-driver": "^1.7.3",
         "lullabot/php-webdriver": "^2.0.5",
         "mglaman/phpstan-drupal": "^1.2.11 || ^2.0.4",
diff --git a/composer/Metapackage/DevDependencies/composer.json b/composer/Metapackage/DevDependencies/composer.json
index 402af5480da4667f59826c65e2417d622aaf95a1..3d865a42278733eef5f5526bd875573d0835a116 100644
--- a/composer/Metapackage/DevDependencies/composer.json
+++ b/composer/Metapackage/DevDependencies/composer.json
@@ -12,7 +12,7 @@
         "colinodell/psr-testlogger": "^1.2",
         "composer/composer": "^2.8.1",
         "drupal/coder": "^8.3.10",
-        "justinrainbow/json-schema": "^5.2",
+        "justinrainbow/json-schema": "^5.2 || ^6.3",
         "lullabot/mink-selenium2-driver": "^1.7.3",
         "lullabot/php-webdriver": "^2.0.5",
         "mglaman/phpstan-drupal": "^1.2.11 || ^2.0.4",
diff --git a/core/lib/Drupal/Core/Theme/Component/ComponentValidator.php b/core/lib/Drupal/Core/Theme/Component/ComponentValidator.php
index 246f143d4e25d0e9bc6b732b8253e7ced2ff351c..ff102b5170a9aac8655213a725fc568105c74d9c 100644
--- a/core/lib/Drupal/Core/Theme/Component/ComponentValidator.php
+++ b/core/lib/Drupal/Core/Theme/Component/ComponentValidator.php
@@ -199,7 +199,9 @@ public function validateProps(array $context, Component $component): bool {
     $errors = array_filter(
       $this->validator->getErrors(),
       function (array $error) use ($context): bool {
-        if (($error['constraint'] ?? '') !== 'type') {
+        // Support 5.0 ($error['constraint']) and 6.0
+        // ($error['constraint']['name']) at the same time.
+        if (($error['constraint']['name'] ?? $error['constraint'] ?? '') !== 'type') {
           return TRUE;
         }
         return !Element::isRenderArray($context[$error['property']] ?? NULL);
diff --git a/core/tests/Drupal/Tests/Core/Theme/Component/ComponentValidatorTest.php b/core/tests/Drupal/Tests/Core/Theme/Component/ComponentValidatorTest.php
index 7e706edcfe0e7ef1e784b968149ee21950c4f77c..46d77602c39b8324599b949b75fe534d0c582e04 100644
--- a/core/tests/Drupal/Tests/Core/Theme/Component/ComponentValidatorTest.php
+++ b/core/tests/Drupal/Tests/Core/Theme/Component/ComponentValidatorTest.php
@@ -9,6 +9,7 @@
 use Drupal\Core\Theme\Component\ComponentValidator;
 use Drupal\Core\Render\Component\Exception\InvalidComponentException;
 use Drupal\Core\Plugin\Component;
+use JsonSchema\ConstraintError;
 use JsonSchema\Constraints\Factory;
 use JsonSchema\Constraints\FormatConstraint;
 use JsonSchema\Entity\JsonPointer;
@@ -359,7 +360,13 @@ public function check(&$element, $schema = NULL, ?JsonPointer $path = NULL, $i =
     }
     if ($schema->format === 'uri') {
       if (\is_string($element) && !UrlHelper::isValid($element)) {
-        $this->addError($path, 'Invalid URL format', 'format', ['format' => $schema->format]);
+        if (class_exists(ConstraintError::class)) {
+          $this->addError(ConstraintError::FORMAT_URL(), $path, ['format' => $schema->format]);
+        }
+        else {
+          // @todo Remove when we no longer support justinrainbow/json-schema v5.
+          $this->addError($path, 'Invalid URL format', 'format', ['format' => $schema->format]);
+        }
       }
       return;
     }
